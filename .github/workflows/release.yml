name: Release

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - "**/*.md"

  push:
    branches: [main]
    tags: ["v*.*.*"]

permissions:
  contents: write
  packages: write

env:
  APPLICATION_NAME: indexer
  GO_VERSION: "1.24.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            image: docker.elastic.co/beats-dev/golang-crossbuild:${{ env.GO_VERSION }}-main
          - goos: linux
            goarch: arm64
            image: docker.elastic.co/beats-dev/golang-crossbuild:${{ env.GO_VERSION }}-arm
          - goos: windows
            goarch: amd64
            image: docker.elastic.co/beats-dev/golang-crossbuild:${{ env.GO_VERSION }}-main
          - goos: darwin
            goarch: amd64
            image: docker.elastic.co/beats-dev/golang-crossbuild:${{ env.GO_VERSION }}-darwin
    container:
      image: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v5

      - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          CGO_ENABLED: "1"
        run: |
          mkdir -p dist/${{ matrix.goos }}-${{ matrix.goarch }}
          /crossbuild -p "${{ matrix.goos }}/${{ matrix.goarch }}" --build-cmd "make build"
          BIN=${APPLICATION_NAME}
          if [ "${{ matrix.goos }}" = "windows" ]; then BIN=$BIN.exe; fi
          mv $BIN dist/${{ matrix.goos }}-${{ matrix.goarch }}/

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: linux-amd64
          path: dist/linux-amd64
      - uses: actions/download-artifact@v5
        with:
          name: linux-arm64
          path: dist/linux-arm64
      - uses: actions/download-artifact@v5
        with:
          name: windows-amd64
          path: dist/windows-amd64
      - uses: actions/download-artifact@v5
        with:
          name: darwin-amd64
          path: dist/darwin-amd64

      - id: create_release
        uses: actions/github-script@v8
        with:
          result-encoding: string
          script: |
            const tag = context.ref.replace('refs/tags/', '')
            const release = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: tag,
              draft: false,
              prerelease: false,
              generate_release_notes: true
            })
            return release.data.id

      - name: Upload linux‑amd64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: dist/linux-amd64/${{ env.APPLICATION_NAME }}
          asset_name: ${{ env.APPLICATION_NAME }}_linux_amd64
          asset_content_type: application/octet-stream

      - name: Upload linux‑arm64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: dist/linux-arm64/${{ env.APPLICATION_NAME }}
          asset_name: ${{ env.APPLICATION_NAME }}_linux_arm64
          asset_content_type: application/octet-stream

      - name: Upload windows‑amd64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: dist/windows-amd64/${{ env.APPLICATION_NAME }}.exe
          asset_name: ${{ env.APPLICATION_NAME }}_windows_amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload darwin‑amd64
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.result }}
          asset_path: dist/darwin-amd64/${{ env.APPLICATION_NAME }}
          asset_name: ${{ env.APPLICATION_NAME }}_darwin_amd64
          asset_content_type: application/octet-stream
